// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryEF;

#nullable disable

namespace RepositoryEF.Migrations
{
    [DbContext(typeof(LibraryEFContext))]
    [Migration("20221009223704_SimpleLibraryDB_withSeed")]
    partial class SimpleLibraryDB_withSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BornDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            FirstName = "N/A",
                            LastName = "N/A",
                            Tags = ""
                        },
                        new
                        {
                            Id = 2,
                            BornDate = new DateTime(1798, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FirstName = "Adam",
                            LastName = "Mickiewicz",
                            Tags = ""
                        });
                });

            modelBuilder.Entity("Entities.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            Description = "",
                            Language = 0,
                            ReleaseDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tags = "",
                            Title = "Some old book"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CategoryId = 1,
                            Description = "",
                            Language = 2,
                            ReleaseDate = new DateTime(1800, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tags = "",
                            Title = "Some old German book"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CategoryId = 2,
                            Description = "",
                            Language = 3,
                            ReleaseDate = new DateTime(2010, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tags = "",
                            Title = "Some new French book"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            CategoryId = 2,
                            Description = "",
                            Language = 1,
                            ReleaseDate = new DateTime(1823, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tags = "",
                            Title = "Dziady część II"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            CategoryId = 2,
                            Description = "",
                            Language = 1,
                            ReleaseDate = new DateTime(1832, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tags = "",
                            Title = "Dziady część III"
                        });
                });

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Novel",
                            Tags = ""
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Other",
                            Tags = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
